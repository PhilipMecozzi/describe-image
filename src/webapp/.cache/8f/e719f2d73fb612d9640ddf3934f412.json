{"id":"node_modules/@azure/storage-blob/dist-esm/storage-blob/src/Range.js","dependencies":[{"name":"F:\\Code\\describe-image\\describe-image\\src\\webapp\\node_modules\\@azure\\storage-blob\\dist-esm\\storage-blob\\src\\Range.js.map","includedInParent":true,"mtime":1648123196929},{"name":"F:\\Code\\describe-image\\describe-image\\src\\webapp\\package.json","includedInParent":true,"mtime":1648123088472},{"name":"F:\\Code\\describe-image\\describe-image\\src\\webapp\\node_modules\\@azure\\storage-blob\\package.json","includedInParent":true,"mtime":1648123195045}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rangeToString = rangeToString;\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Generate a range string. For example:\n *\n * \"bytes=255-\" or \"bytes=0-511\"\n *\n * @param iRange -\n */\nfunction rangeToString(iRange) {\n  if (iRange.offset < 0) {\n    throw new RangeError(`Range.offset cannot be smaller than 0.`);\n  }\n\n  if (iRange.count && iRange.count <= 0) {\n    throw new RangeError(`Range.count must be larger than 0. Leave it undefined if you want a range from offset to the end.`);\n  }\n\n  return iRange.count ? `bytes=${iRange.offset}-${iRange.offset + iRange.count - 1}` : `bytes=${iRange.offset}-`;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/Range.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/Range.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../src/Range.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../src/Range.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":18,"column":0}},{"source":"../../../src/Range.ts","name":null,"original":{"line":27,"column":16},"generated":{"line":18,"column":9}},{"source":"../../../src/Range.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":18,"column":22}},{"source":"../../../src/Range.ts","name":null,"original":{"line":27,"column":30},"generated":{"line":18,"column":23}},{"source":"../../../src/Range.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":18,"column":29}},{"source":"../../../src/Range.ts","name":null,"original":{"line":27,"column":43},"generated":{"line":18,"column":31}},{"source":"../../../src/Range.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":19,"column":0}},{"source":"../../../src/Range.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":19,"column":6}},{"source":"../../../src/Range.ts","name":null,"original":{"line":28,"column":12},"generated":{"line":19,"column":12}},{"source":"../../../src/Range.ts","name":null,"original":{"line":28,"column":13},"generated":{"line":19,"column":13}},{"source":"../../../src/Range.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":19,"column":19}},{"source":"../../../src/Range.ts","name":null,"original":{"line":28,"column":22},"generated":{"line":19,"column":22}},{"source":"../../../src/Range.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":19,"column":23}},{"source":"../../../src/Range.ts","name":null,"original":{"line":28,"column":25},"generated":{"line":19,"column":25}},{"source":"../../../src/Range.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":20,"column":0}},{"source":"../../../src/Range.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":20,"column":10}},{"source":"../../../src/Range.ts","name":null,"original":{"line":29,"column":14},"generated":{"line":20,"column":14}},{"source":"../../../src/Range.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":20,"column":24}},{"source":"../../../src/Range.ts","name":null,"original":{"line":29,"column":25},"generated":{"line":20,"column":25}},{"source":"../../../src/Range.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":20,"column":65}},{"source":"../../../src/Range.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":20,"column":66}},{"source":"../../../src/Range.ts","name":null,"original":{"line":30,"column":3},"generated":{"line":21,"column":0}},{"source":"../../../src/Range.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":23,"column":0}},{"source":"../../../src/Range.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":23,"column":6}},{"source":"../../../src/Range.ts","name":null,"original":{"line":31,"column":12},"generated":{"line":23,"column":12}},{"source":"../../../src/Range.ts","name":null,"original":{"line":31,"column":13},"generated":{"line":23,"column":13}},{"source":"../../../src/Range.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":23,"column":18}},{"source":"../../../src/Range.ts","name":null,"original":{"line":31,"column":22},"generated":{"line":23,"column":22}},{"source":"../../../src/Range.ts","name":null,"original":{"line":31,"column":28},"generated":{"line":23,"column":28}},{"source":"../../../src/Range.ts","name":null,"original":{"line":31,"column":29},"generated":{"line":23,"column":29}},{"source":"../../../src/Range.ts","name":null,"original":{"line":31,"column":22},"generated":{"line":23,"column":34}},{"source":"../../../src/Range.ts","name":null,"original":{"line":31,"column":38},"generated":{"line":23,"column":38}},{"source":"../../../src/Range.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":23,"column":39}},{"source":"../../../src/Range.ts","name":null,"original":{"line":31,"column":41},"generated":{"line":23,"column":41}},{"source":"../../../src/Range.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":24,"column":0}},{"source":"../../../src/Range.ts","name":null,"original":{"line":32,"column":10},"generated":{"line":24,"column":10}},{"source":"../../../src/Range.ts","name":null,"original":{"line":32,"column":14},"generated":{"line":24,"column":14}},{"source":"../../../src/Range.ts","name":null,"original":{"line":32,"column":10},"generated":{"line":24,"column":24}},{"source":"../../../src/Range.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":24,"column":25}},{"source":"../../../src/Range.ts","name":null,"original":{"line":32,"column":10},"generated":{"line":24,"column":124}},{"source":"../../../src/Range.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":24,"column":125}},{"source":"../../../src/Range.ts","name":null,"original":{"line":35,"column":3},"generated":{"line":25,"column":0}},{"source":"../../../src/Range.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":27,"column":0}},{"source":"../../../src/Range.ts","name":null,"original":{"line":36,"column":9},"generated":{"line":27,"column":9}},{"source":"../../../src/Range.ts","name":null,"original":{"line":36,"column":15},"generated":{"line":27,"column":15}},{"source":"../../../src/Range.ts","name":null,"original":{"line":36,"column":16},"generated":{"line":27,"column":16}},{"source":"../../../src/Range.ts","name":null,"original":{"line":36,"column":9},"generated":{"line":27,"column":21}},{"source":"../../../src/Range.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":27,"column":24}},{"source":"../../../src/Range.ts","name":null,"original":{"line":37,"column":15},"generated":{"line":27,"column":33}},{"source":"../../../src/Range.ts","name":null,"original":{"line":37,"column":21},"generated":{"line":27,"column":39}},{"source":"../../../src/Range.ts","name":null,"original":{"line":37,"column":22},"generated":{"line":27,"column":40}},{"source":"../../../src/Range.ts","name":null,"original":{"line":37,"column":28},"generated":{"line":27,"column":46}},{"source":"../../../src/Range.ts","name":null,"original":{"line":37,"column":32},"generated":{"line":27,"column":50}},{"source":"../../../src/Range.ts","name":null,"original":{"line":37,"column":38},"generated":{"line":27,"column":56}},{"source":"../../../src/Range.ts","name":null,"original":{"line":37,"column":39},"generated":{"line":27,"column":57}},{"source":"../../../src/Range.ts","name":null,"original":{"line":37,"column":32},"generated":{"line":27,"column":63}},{"source":"../../../src/Range.ts","name":null,"original":{"line":37,"column":48},"generated":{"line":27,"column":66}},{"source":"../../../src/Range.ts","name":null,"original":{"line":37,"column":54},"generated":{"line":27,"column":72}},{"source":"../../../src/Range.ts","name":null,"original":{"line":37,"column":55},"generated":{"line":27,"column":73}},{"source":"../../../src/Range.ts","name":null,"original":{"line":37,"column":32},"generated":{"line":27,"column":78}},{"source":"../../../src/Range.ts","name":null,"original":{"line":37,"column":63},"generated":{"line":27,"column":81}},{"source":"../../../src/Range.ts","name":null,"original":{"line":37,"column":64},"generated":{"line":27,"column":82}},{"source":"../../../src/Range.ts","name":null,"original":{"line":36,"column":9},"generated":{"line":27,"column":84}},{"source":"../../../src/Range.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":27,"column":87}},{"source":"../../../src/Range.ts","name":null,"original":{"line":38,"column":15},"generated":{"line":27,"column":96}},{"source":"../../../src/Range.ts","name":null,"original":{"line":38,"column":21},"generated":{"line":27,"column":102}},{"source":"../../../src/Range.ts","name":null,"original":{"line":38,"column":22},"generated":{"line":27,"column":103}},{"source":"../../../src/Range.ts","name":null,"original":{"line":38,"column":28},"generated":{"line":27,"column":109}},{"source":"../../../src/Range.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":27,"column":112}},{"source":"../../../src/Range.ts","name":null,"original":{"line":39,"column":1},"generated":{"line":28,"column":0}}],"sources":{"../../../src/Range.ts":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Range for Blob Service Operations.\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-the-range-header-for-blob-service-operations\n */\nexport interface Range {\n  /**\n   * StartByte, larger than or equal 0.\n   */\n  offset: number;\n  /**\n   * Optional. Count of bytes, larger than 0.\n   * If not provided, will return bytes from offset to the end.\n   */\n  count?: number;\n}\n\n/**\n * Generate a range string. For example:\n *\n * \"bytes=255-\" or \"bytes=0-511\"\n *\n * @param iRange -\n */\nexport function rangeToString(iRange: Range): string {\n  if (iRange.offset < 0) {\n    throw new RangeError(`Range.offset cannot be smaller than 0.`);\n  }\n  if (iRange.count && iRange.count <= 0) {\n    throw new RangeError(\n      `Range.count must be larger than 0. Leave it undefined if you want a range from offset to the end.`\n    );\n  }\n  return iRange.count\n    ? `bytes=${iRange.offset}-${iRange.offset + iRange.count - 1}`\n    : `bytes=${iRange.offset}-`;\n}\n"},"lineCount":null}},"error":null,"hash":"a3585e25c3c0b6d742f0e740f048104e","cacheData":{"env":{}}}