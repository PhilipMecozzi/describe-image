{"id":"node_modules/@azure/core-http/dist-esm/src/restError.js","dependencies":[{"name":"F:\\Code\\describe-image\\describe-image\\src\\webapp\\node_modules\\@azure\\core-http\\dist-esm\\src\\restError.js.map","includedInParent":true,"mtime":1648123195517},{"name":"F:\\Code\\describe-image\\describe-image\\src\\webapp\\package.json","includedInParent":true,"mtime":1648123088472},{"name":"F:\\Code\\describe-image\\describe-image\\src\\webapp\\node_modules\\@azure\\core-http\\package.json","includedInParent":true,"mtime":1648123194458},{"name":"./util/sanitizer","loc":{"line":3,"column":26,"index":101},"parent":"F:\\Code\\describe-image\\describe-image\\src\\webapp\\node_modules\\@azure\\core-http\\dist-esm\\src\\restError.js","resolved":"F:\\Code\\describe-image\\describe-image\\src\\webapp\\node_modules\\@azure\\core-http\\dist-esm\\src\\util\\sanitizer.js"},{"name":"./util/inspect","loc":{"line":4,"column":23,"index":144},"parent":"F:\\Code\\describe-image\\describe-image\\src\\webapp\\node_modules\\@azure\\core-http\\dist-esm\\src\\restError.js","resolved":"F:\\Code\\describe-image\\describe-image\\src\\webapp\\node_modules\\@azure\\core-http\\dist-esm\\src\\util\\inspect.browser.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RestError = void 0;\n\nvar _sanitizer = require(\"./util/sanitizer\");\n\nvar _inspect = require(\"./util/inspect\");\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst errorSanitizer = new _sanitizer.Sanitizer();\n/**\n * An error resulting from an HTTP request to a service endpoint.\n */\n\nclass RestError extends Error {\n  constructor(message, code, statusCode, request, response) {\n    super(message);\n    this.name = \"RestError\";\n    this.code = code;\n    this.statusCode = statusCode;\n    this.request = request;\n    this.response = response;\n    Object.setPrototypeOf(this, RestError.prototype);\n  }\n  /**\n   * Logging method for util.inspect in Node\n   */\n\n\n  [_inspect.custom]() {\n    return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(this)}`;\n  }\n\n}\n/**\n * A constant string to identify errors that may arise when making an HTTP request that indicates an issue with the transport layer (e.g. the hostname of the URL cannot be resolved via DNS.)\n */\n\n\nexports.RestError = RestError;\nRestError.REQUEST_SEND_ERROR = \"REQUEST_SEND_ERROR\";\n/**\n * A constant string to identify errors that may arise from parsing an incoming HTTP response. Usually indicates a malformed HTTP body, such as an encoded JSON payload that is incomplete.\n */\n\nRestError.PARSE_ERROR = \"PARSE_ERROR\";"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/restError.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":13,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":14,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":14,"column":6}},{"source":"../../src/restError.ts","name":null,"original":{"line":9,"column":20},"generated":{"line":14,"column":20}},{"source":"../../src/restError.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":14,"column":23}},{"source":"../../src/restError.ts","name":null,"original":{"line":9,"column":27},"generated":{"line":14,"column":27}},{"source":"../../src/restError.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":14,"column":47}},{"source":"../../src/restError.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":14,"column":49}},{"source":"../../src/restError.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":15,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":14,"column":6},"generated":{"line":19,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":14,"column":13},"generated":{"line":19,"column":6}},{"source":"../../src/restError.ts","name":null,"original":{"line":14,"column":6},"generated":{"line":19,"column":15}},{"source":"../../src/restError.ts","name":null,"original":{"line":14,"column":31},"generated":{"line":19,"column":24}},{"source":"../../src/restError.ts","name":null,"original":{"line":14,"column":6},"generated":{"line":19,"column":29}},{"source":"../../src/restError.ts","name":null,"original":{"line":14,"column":36},"generated":{"line":19,"column":30}},{"source":"../../src/restError.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":20,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":20,"column":2}},{"source":"../../src/restError.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":20,"column":13}},{"source":"../../src/restError.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":20,"column":14}},{"source":"../../src/restError.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":20,"column":21}},{"source":"../../src/restError.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":20,"column":23}},{"source":"../../src/restError.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":20,"column":27}},{"source":"../../src/restError.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":20,"column":29}},{"source":"../../src/restError.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":20,"column":39}},{"source":"../../src/restError.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":20,"column":41}},{"source":"../../src/restError.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":20,"column":48}},{"source":"../../src/restError.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":20,"column":50}},{"source":"../../src/restError.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":20,"column":58}},{"source":"../../src/restError.ts","name":null,"original":{"line":49,"column":36},"generated":{"line":20,"column":60}},{"source":"../../src/restError.ts","name":null,"original":{"line":51,"column":4},"generated":{"line":21,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":51,"column":10},"generated":{"line":21,"column":10}},{"source":"../../src/restError.ts","name":null,"original":{"line":51,"column":4},"generated":{"line":21,"column":17}},{"source":"../../src/restError.ts","name":null,"original":{"line":52,"column":4},"generated":{"line":22,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":22,"column":9}},{"source":"../../src/restError.ts","name":null,"original":{"line":52,"column":4},"generated":{"line":22,"column":13}},{"source":"../../src/restError.ts","name":null,"original":{"line":52,"column":16},"generated":{"line":22,"column":16}},{"source":"../../src/restError.ts","name":null,"original":{"line":52,"column":4},"generated":{"line":22,"column":27}},{"source":"../../src/restError.ts","name":null,"original":{"line":53,"column":4},"generated":{"line":23,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":53,"column":9},"generated":{"line":23,"column":9}},{"source":"../../src/restError.ts","name":null,"original":{"line":53,"column":4},"generated":{"line":23,"column":13}},{"source":"../../src/restError.ts","name":null,"original":{"line":53,"column":16},"generated":{"line":23,"column":16}},{"source":"../../src/restError.ts","name":null,"original":{"line":53,"column":4},"generated":{"line":23,"column":20}},{"source":"../../src/restError.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":24,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":54,"column":9},"generated":{"line":24,"column":9}},{"source":"../../src/restError.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":24,"column":19}},{"source":"../../src/restError.ts","name":null,"original":{"line":54,"column":22},"generated":{"line":24,"column":22}},{"source":"../../src/restError.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":24,"column":32}},{"source":"../../src/restError.ts","name":null,"original":{"line":55,"column":4},"generated":{"line":25,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":25,"column":9}},{"source":"../../src/restError.ts","name":null,"original":{"line":55,"column":4},"generated":{"line":25,"column":16}},{"source":"../../src/restError.ts","name":null,"original":{"line":55,"column":19},"generated":{"line":25,"column":19}},{"source":"../../src/restError.ts","name":null,"original":{"line":55,"column":4},"generated":{"line":25,"column":26}},{"source":"../../src/restError.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":26,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":56,"column":9},"generated":{"line":26,"column":9}},{"source":"../../src/restError.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":26,"column":17}},{"source":"../../src/restError.ts","name":null,"original":{"line":56,"column":20},"generated":{"line":26,"column":20}},{"source":"../../src/restError.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":26,"column":28}},{"source":"../../src/restError.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":27,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":27,"column":4}},{"source":"../../src/restError.ts","name":null,"original":{"line":58,"column":10},"generated":{"line":27,"column":10}},{"source":"../../src/restError.ts","name":null,"original":{"line":58,"column":11},"generated":{"line":27,"column":11}},{"source":"../../src/restError.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":27,"column":25}},{"source":"../../src/restError.ts","name":null,"original":{"line":58,"column":26},"generated":{"line":27,"column":26}},{"source":"../../src/restError.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":27,"column":30}},{"source":"../../src/restError.ts","name":null,"original":{"line":58,"column":32},"generated":{"line":27,"column":32}},{"source":"../../src/restError.ts","name":null,"original":{"line":58,"column":41},"generated":{"line":27,"column":41}},{"source":"../../src/restError.ts","name":null,"original":{"line":58,"column":42},"generated":{"line":27,"column":42}},{"source":"../../src/restError.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":27,"column":51}},{"source":"../../src/restError.ts","name":null,"original":{"line":59,"column":3},"generated":{"line":28,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":61,"column":2},"generated":{"line":29,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":64,"column":9},"generated":{"line":34,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":64,"column":3},"generated":{"line":34,"column":3}},{"source":"../../src/restError.ts","name":null,"original":{"line":64,"column":9},"generated":{"line":34,"column":18}},{"source":"../../src/restError.ts","name":null,"original":{"line":64,"column":10},"generated":{"line":34,"column":22}},{"source":"../../src/restError.ts","name":null,"original":{"line":65,"column":4},"generated":{"line":35,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":65,"column":11},"generated":{"line":35,"column":11}},{"source":"../../src/restError.ts","name":null,"original":{"line":65,"column":25},"generated":{"line":35,"column":25}},{"source":"../../src/restError.ts","name":null,"original":{"line":65,"column":30},"generated":{"line":35,"column":30}},{"source":"../../src/restError.ts","name":null,"original":{"line":65,"column":37},"generated":{"line":35,"column":37}},{"source":"../../src/restError.ts","name":null,"original":{"line":65,"column":44},"generated":{"line":35,"column":44}},{"source":"../../src/restError.ts","name":null,"original":{"line":65,"column":58},"generated":{"line":35,"column":58}},{"source":"../../src/restError.ts","name":null,"original":{"line":65,"column":59},"generated":{"line":35,"column":59}},{"source":"../../src/restError.ts","name":null,"original":{"line":65,"column":44},"generated":{"line":35,"column":67}},{"source":"../../src/restError.ts","name":null,"original":{"line":65,"column":68},"generated":{"line":35,"column":68}},{"source":"../../src/restError.ts","name":null,"original":{"line":65,"column":44},"generated":{"line":35,"column":72}},{"source":"../../src/restError.ts","name":null,"original":{"line":65,"column":73},"generated":{"line":35,"column":73}},{"source":"../../src/restError.ts","name":null,"original":{"line":65,"column":4},"generated":{"line":35,"column":75}},{"source":"../../src/restError.ts","name":null,"original":{"line":66,"column":3},"generated":{"line":36,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":14,"column":36},"generated":{"line":38,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":39,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":18,"column":18},"generated":{"line":45,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":18,"column":18},"generated":{"line":45,"column":9}},{"source":"../../src/restError.ts","name":null,"original":{"line":18,"column":18},"generated":{"line":45,"column":10}},{"source":"../../src/restError.ts","name":null,"original":{"line":18,"column":18},"generated":{"line":45,"column":28}},{"source":"../../src/restError.ts","name":null,"original":{"line":18,"column":47},"generated":{"line":45,"column":31}},{"source":"../../src/restError.ts","name":null,"original":{"line":18,"column":18},"generated":{"line":45,"column":51}},{"source":"../../src/restError.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":46,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":50,"column":0}},{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":50,"column":9}},{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":50,"column":10}},{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":50,"column":21}},{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":40},"generated":{"line":50,"column":24}},{"source":"../../src/restError.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":50,"column":37}}],"sources":{"../../src/restError.ts":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"./httpOperationResponse\";\nimport { Sanitizer } from \"./util/sanitizer\";\nimport { WebResourceLike } from \"./webResource\";\nimport { custom } from \"./util/inspect\";\n\nconst errorSanitizer = new Sanitizer();\n\n/**\n * An error resulting from an HTTP request to a service endpoint.\n */\nexport class RestError extends Error {\n  /**\n   * A constant string to identify errors that may arise when making an HTTP request that indicates an issue with the transport layer (e.g. the hostname of the URL cannot be resolved via DNS.)\n   */\n  static readonly REQUEST_SEND_ERROR: string = \"REQUEST_SEND_ERROR\";\n  /**\n   * A constant string to identify errors that may arise from parsing an incoming HTTP response. Usually indicates a malformed HTTP body, such as an encoded JSON payload that is incomplete.\n   */\n  static readonly PARSE_ERROR: string = \"PARSE_ERROR\";\n\n  /**\n   * The error code, if any. Can be one of the static error code properties (REQUEST_SEND_ERROR / PARSE_ERROR) or can be a string code from an underlying system call (E_NOENT).\n   */\n  code?: string;\n  /**\n   * The HTTP status code of the response, if one was returned.\n   */\n  statusCode?: number;\n  /**\n   * Outgoing request.\n   */\n  request?: WebResourceLike;\n  /**\n   * Incoming response.\n   */\n  response?: HttpOperationResponse;\n  /**\n   * Any additional details. In the case of deserialization errors, can be the processed response.\n   */\n  details?: unknown;\n  constructor(\n    message: string,\n    code?: string,\n    statusCode?: number,\n    request?: WebResourceLike,\n    response?: HttpOperationResponse\n  ) {\n    super(message);\n    this.name = \"RestError\";\n    this.code = code;\n    this.statusCode = statusCode;\n    this.request = request;\n    this.response = response;\n\n    Object.setPrototypeOf(this, RestError.prototype);\n  }\n\n  /**\n   * Logging method for util.inspect in Node\n   */\n  [custom](): string {\n    return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(this)}`;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"4338f8648da9bc48264462f3233a7658","cacheData":{"env":{}}}